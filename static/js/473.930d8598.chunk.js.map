{"version":3,"file":"static/js/473.930d8598.chunk.js","mappings":"kNACA,EAAwB,sBAAxB,EAAuD,uBAAvD,EAA0F,0BAA1F,EAA2H,qBAA3H,EAAuJ,qBAAvJ,EAAkL,oB,SCGnK,SAASA,IACtB,OAA0CC,EAAAA,EAAAA,UAAS,MAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAQF,EAAaG,IAAI,UAAY,IAE3CC,EAAAA,EAAAA,YAAU,WACRC,MAAM,sIAAD,OACmIH,IAErII,MAAK,SAAAC,GACJ,OAAOA,EAASC,UAEjBF,MAAK,SAAAG,GAAI,OAAIX,EAAiBW,EAAKC,cACrC,CAACR,IAYJ,OACE,iCACE,kBAAMS,SAZe,SAAAC,GACvBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOC,OAAOF,MAET,KAAjBA,EAAMG,QAGVhB,EAAgB,CAACC,MAAOY,KAKtB,WACE,kBACEI,KAAK,SACLC,KAAK,OACLC,aAAa,MACbC,UAAWC,EACXC,WAAS,EACTC,YAAY,kBAEd,mBAAQL,KAAK,SAASE,UAAWC,EAAjC,wBAIF,eAAID,UAAWC,EAAf,SACGzB,GACCA,EAAc4B,KAAI,SAAAC,GAAI,eACpB,eAAkBL,UAAWC,EAA7B,UACE,UAAC,KAAD,CAASK,GAAE,UAAKD,EAAKE,IAAMP,UAAWC,EAAtC,WAEE,gBAAKD,UAAWC,EAAOO,IAAG,yCAAoCH,EAAKI,eAAiB,mCAA1D,KAAiGC,IAAI,SAC/H,2CAAIL,EAAKM,sBAAT,QAA2BN,EAAKO,aAAhC,QAAyCP,EAAKQ,oBAJzCR,EAAKE","sources":["webpack://react-homework-template/./src/views/css/Movies.module.css?2364","views/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Movies_input__T1+k0\",\"button\":\"Movies_button__JR8hU\",\"filmsList\":\"Movies_filmsList__+36T2\",\"film\":\"Movies_film__iOy1C\",\"item\":\"Movies_item__-A0Ka\",\"img\":\"Movies_img__Yh0CH\"};","import { useState, useEffect } from 'react'\nimport { NavLink, useSearchParams } from \"react-router-dom\";\nimport s from './css/Movies.module.css'\n\nexport default function Movies() {\n  const [searchRequest, setSearchRequest] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const query = searchParams.get('query') || '';\n\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=38f8f0caa293ab4deac25df0604d8478&language=en-US&page=1&include_adult=false&query=${query}`\n    )\n      .then(response => {\n        return response.json();\n      })\n      .then(data => setSearchRequest(data.results));   \n  }, [query]);\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const value = e.target.search.value;\n\n    if (value.trim() === '') {\n      return;\n    }\n    setSearchParams({query: value});\n  };\n\n  return (\n    <>\n      <form onSubmit={handleFormSubmit}>\n        <input\n          name=\"search\"\n          type=\"text\"\n          autoComplete=\"off\"\n          className={s.input}\n          autoFocus\n          placeholder=\"Search films\"\n        />\n        <button type=\"submit\" className={s.button}>\n          Search\n        </button>\n      </form>\n      <ul className={s.filmsList}>\n        {searchRequest &&\n          searchRequest.map(item => (\n            <li key={item.id} className={s.item}>\n              <NavLink to={`${item.id}`} className={s.film}>\n                {/* {item.original_title ?? item.title} */}\n                <img className={s.img} src={`https://image.tmdb.org/t/p/w500${item.backdrop_path || '/2f2denPrX62TjWJKVD9i2dum164.jpg'} `} alt=\"alt\"/>\n                <p>{item.original_title ?? item.title ?? item.original_name}</p>\n              </NavLink>\n              \n              </li>\n          ))}\n      </ul>\n    </>\n  );\n}\n"],"names":["Movies","useState","searchRequest","setSearchRequest","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetch","then","response","json","data","results","onSubmit","e","preventDefault","value","target","search","trim","name","type","autoComplete","className","s","autoFocus","placeholder","map","item","to","id","src","backdrop_path","alt","original_title","title","original_name"],"sourceRoot":""}